#! /usr/bin/python3

import sys, os, types
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "..", "app", "subapps", "khplayer"))
from pipewire import Patchbay
from virtual_cable import create_cable, destory_cable, connect_peripherals, connect_obs, connect_zoom

# Load the Flask configuration file
config = types.ModuleType("config")
config.__file__ = os.path.join(os.path.dirname(__file__), "..", "instance", "config.py")
with open(config.__file__, mode="rb") as config_file:
	exec(compile(config_file.read(), config.__file__, "exec"), config.__dict__)

patchbay = Patchbay()
patchbay.load()

good = 0
for arg in sys.argv[1:]:
	match arg:
		case "create":
			create_cable(patchbay)
			good += 1
		case "destroy":
			destroy_cable(patchbay)
			good += 1
		case "connect-peripherals":
			connect_peripherals(patchbay, config.PERIPHERALS)
			good += 1
		case "connect-obs":
			connect_obs(patchbay)
			good += 1
		case "connect-zoom":
			connect_zoom(patchbay)
			good += 1
		case "connect-all":
			connect_all(patchbay, config.PERIPHERALS)
		case _:
			good = False
			break
if not good:
	sys.stderr.write("Usage: virtual-audio-cable [create, destroy, connect-peripherals, connect-obs, connect-zoom]\n")
	sys.exit(1)

